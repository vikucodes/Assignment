package Test_Scenerio;

import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.TakesScreenshot;
import org.openqa.selenium.OutputType;
import org.openqa.selenium.io.FileHandler;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.FluentWait;
import org.testng.Assert;
import org.testng.annotations.AfterClass;
import org.testng.annotations.BeforeClass;
import org.testng.annotations.Test;

import java.io.File;
import java.io.IOException;
import java.time.Duration;
import java.util.NoSuchElementException;
import java.util.Set;
import java.util.concurrent.TimeUnit;
import java.util.function.Function;

public class Test_Scenerio001_TestCase {

    WebDriver driver;

    @BeforeClass
    public void setUp() {
        // Optional: set ChromeDriver path
        // System.setProperty("webdriver.chrome.driver", "path/to/chromedriver");
        driver = new ChromeDriver();
        driver.manage().window().maximize();
    }

    @Test
    public void testSignupButton() {
        try {
            driver.get("https://v0-button-to-open-v0-home-page-h5dizpkwp.vercel.app/");

            // Click initial button to open new window
            driver.findElement(By.xpath("/html/body/div/button")).click();

            // Wait for a new window and switch to it
            String newWindow = waitForNewWindowAndSwitch(10);
            System.out.println("Switched to window: " + newWindow);

            // Optional: check if inside iframe and switch (uncomment if needed)
            // driver.switchTo().frame("frame_name_or_index");

            // Use FluentWait to wait for Sign Up button
            FluentWait<WebDriver> wait = new FluentWait<>(driver)
                    .withTimeout(Duration.ofSeconds(15))
                    .pollingEvery(Duration.ofMillis(500))
                    .ignoring(NoSuchElementException.class);

            WebElement signUpButton = wait.until(new Function<WebDriver, WebElement>() {
                public WebElement apply(WebDriver driver) {
                    WebElement element = driver.findElement(
                            By.xpath("//*[contains(translate(text(),'ABCDEFGHIJKLMNOPQRSTUVWXYZ','abcdefghijklmnopqrstuvwxyz'),'sign up')]"));
                    if (element.isDisplayed()) {
                        return element;
                    } else {
                        return null;
                    }
                }
            });

            Assert.assertTrue(signUpButton.isDisplayed(), "Sign Up button is not visible!");
            System.out.println("Sign Up button is visible.");

        } catch (Exception e) {
            takeScreenshot("Screenshots/signup.png");
            Assert.fail("Test failed due to exception: " + e.getMessage());
        }
    }

    // Utility to wait for new window and switch
    private String waitForNewWindowAndSwitch(int timeoutSeconds) throws InterruptedException {
        String parentWindow = driver.getWindowHandle();
        Set<String> handles;
        int elapsed = 0;
        while (elapsed < timeoutSeconds * 1000) {
            handles = driver.getWindowHandles();
            if (handles.size() > 1) {
                for (String handle : handles) {
                    if (!handle.equals(parentWindow)) {
                        driver.switchTo().window(handle);
                        return handle;
                    }
                }
            }
            Thread.sleep(500);
            elapsed += 500;
        }
        throw new RuntimeException("New window did not appear within " + timeoutSeconds + " seconds");
    }

    // Screenshot utility
    private void takeScreenshot(String path) {
        try {
            File src = ((TakesScreenshot) driver).getScreenshotAs(OutputType.FILE);
            File dest = new File(path);
            FileHandler.createDir(dest.getParentFile());
            FileHandler.copy(src, dest);
            System.out.println("Screenshot saved at: " + path);
        } catch (IOException e) {
            System.out.println("Failed to take screenshot: " + e.getMessage());
        }
    }

    @AfterClass
    public void tearDown() {
        if (driver != null) {
            driver.quit();
        }
    }
}
